#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define FIRST   1
#define SECOND  2
#define THIRD   3


/ {
    keymap {
        compatible = "zmk,keymap";
        // ----------------------------------------------------------------------------
        // | TAB  |  Q  |  W  |  E  |  R  |  T  ||  Y  |  U  |  I  |  O  |  P  | BKSP |
        // | ESC  |  A  |  S  |  D  |  F  |  G  ||  H  |  J  |  K  |  L  |  ;  | ENTR |
        // | SHFT |  Z  |  X  |  C  |  V  |  B  ||  N  |  M  |  ,  |  .  |  /  | SHFT |
        // -----------------| ALT | GUI/SPC | 1 || 2/SPC | GUI/ENTR | ALT |------------
        default_layer {
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &kp ESC &kp A &kp S &kp D &kp F &kp G       &kp H &kp J &kp K &kp L &kp SEMI &kp ENTER
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                &kp LALT &mt LGUI SPACE &mo 1               &lt 2 SPACE &mt RGUI ENTER &kp RALT
            >;
        };
        // ---------------------------------------------------------------------------
        // |     |  1  |  2  |  3  |  4  |  5  ||  6  |  7  |  8  |  9  |  0  |      |
        // |     |     |     |     |     |     ||     |     |     |     |     |      |
        // |     |     |     |     |     |     ||     |     |     |     |     |      |
        // ------------------|     |     |     ||     |     |     |-------------------
        first_layer {
            bindings = <
                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5       &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
                &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans
                &trans &trans &trans                            &trans &trans &trans
            >;
        };
        // -------------------------------------------------------------------------------
        // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
        // |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
        // |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
        // -------------------|     |     |     |   |     |     |     |-------------------
        second_layer {
            bindings = <
                &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
                &trans &trans &trans &trans &trans &trans               &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &kp GRAVE
                &trans &trans &trans &trans &trans &trans               &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &kp TILDE
                &trans &trans &trans                                    &trans &trans &trans
            >;
        };
        // --------------------------------------------------------------------------
        // |     |     |     |     |     |     ||     |     |     |     |     |     |
        // |     |     |     |     |     |     ||     |     |     |     |     |     |
        // |     |     |     |     |     |     ||     |     |     |     |     |     |
        // ------------------|     |     |     ||     |     |     |------------------
        third_layer {
            bindings = <
                &trans &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                &trans &trans &trans                        &trans &trans &trans
            >;
        };
    };
};
 